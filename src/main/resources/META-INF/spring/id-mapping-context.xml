<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<description>Context for downloading interactions from PSIQUIC Servers</description>
	
	<import resource="classpath:launch-context.xml" />
	
	<!-- Beans -->
	<bean id="exitListener" class="de.mpg.biochem.model.ExitAfterJobExecution"/>
	
	<bean id="indexDecider" class="de.mpg.biochem.batch.IndexDecider"/>
	
	<!-- Interbase Processor -->
    <bean id="processor" class="de.mpg.biochem.batch.io.IdProcessor" scope="step">
    	<constructor-arg name="indexPath" value="#{jobParameters['mappingPath']}/index"/>
    </bean>
	
	<!-- Uniprot Mapping gzip file reader -->
	<bean id="gzipItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:#{jobParameters['mappingPath']}idmapping_selected.tab.gz" />
        <property name="lineMapper">
            <bean class="de.mpg.biochem.batch.io.UniprotLineMapper" />
        </property>
        <property name="strict" value="false" />
        <property name="bufferedReaderFactory">
            <bean class="de.mpg.biochem.batch.io.GZipBufferedReaderFactory" />
        </property>
    </bean>
    
    <bean id="tabReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['mappingPath']}Uniprot_TAIR10_May2012.txt" />
		<property name="strict" value="true"/>
		<property name="lineMapper">
        	<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter">
							<util:constant static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />
						</property>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.ArrayFieldSetMapper"/>
				</property>
			</bean>
        </property>
	</bean>
	
	<bean id="tabReader2" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['fileName']}" />
		<property name="strict" value="true"/>
		<property name="lineMapper">
        	<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter">
							<util:constant static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />
						</property>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.ArrayFieldSetMapper"/>
				</property>
			</bean>
        </property>
	</bean>
	
	<!-- Writers -->
	<!-- Document Mapping Writer -->
	<bean id="documentWriter" class="de.mpg.biochem.batch.io.DocumentWriter" scope="step">
		<constructor-arg name="path" value="#{jobParameters['mappingPath']}/index"/>
	</bean>
	
	<!-- UniProt processor -->
	<bean id="UniProtProcessor" class="de.mpg.biochem.batch.io.UPIndexProcessor" scope="step"/>
	
	<!-- Tar processor -->
	<bean id="TarProcessor" class="de.mpg.biochem.batch.io.TarIndexProcessor" scope="step"/>
	
	<!-- Mapping Writer -->
	<bean id= "mappingWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="file:#{jobParameters['fileName']}.mapped" />
		<property name="shouldDeleteIfExists" value="true" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter">
					<util:constant static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />
				</property>
		   </bean>
		</property>
	</bean>
	
	<!-- Partitioner -->
	<bean id="partitioner" class="de.mpg.biochem.batch.DownloadPartitioner" scope="step">
		<property name="uniprotUrl" value="#{jobParameters['uniprotUrl']}" />
		<property name="tarUrl" value="#{jobParameters['tarUrl']}" />
		<property name="path" value="#{jobParameters['mappingPath']}" />
	</bean>
	
	<!-- Tasklets -->
	<bean id="downloadTasklet" class="de.mpg.biochem.batch.tasklet.DownloadFileTasklet" scope="step">
		<property name="path" value="#{stepExecutionContext['path']}" />
		<property name="url" value="#{stepExecutionContext['url']}" />
	</bean>
    
    <!-- Steps -->
	<batch:step id="downloadSlave">
		<tasklet ref="downloadTasklet"/>
	</batch:step>
    
    <!-- Job -->
	<batch:job id="mapJob" job-repository="jobRepository">
		<batch:step id="downloadMaster" next="decision">
			<partition step="downloadSlave" partitioner="partitioner">
				<handler grid-size="5" task-executor="taskExecutor" />
			</partition>
	    </batch:step>
		<batch:decision id="decision" decider="indexDecider">
			<batch:next on="CONTINUE" to="createTarIndexParent" />
			<batch:next on="SKIP" to="mapIds" />
	  	</batch:decision>
		<batch:step id="createTarIndexParent" next="createUniprotIndexParent">
			<batch:tasklet task-executor="taskExecutor" throttle-limit="50">
				<batch:chunk reader="tabReader" processor="TarProcessor" writer="documentWriter" commit-interval="10000"></batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="createUniprotIndexParent" next="mapIds">
			<batch:tasklet task-executor="taskExecutor" throttle-limit="50">
				<batch:chunk reader="gzipItemReader" processor="UniProtProcessor" writer="documentWriter" commit-interval="10000"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	  	<batch:step id="mapIds">
			<batch:tasklet>
				<batch:chunk reader="tabReader2" processor="processor" writer="mappingWriter" commit-interval="30000"/>
			</batch:tasklet>
	    </batch:step>
		<batch:listeners>
			<batch:listener ref="exitListener"/>
		</batch:listeners>
    </batch:job>

</beans>
