<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>Context for downloading interactions from PSIQUIC Servers</description>
	
	<import resource="classpath:launch-context.xml" />
	
	<!-- Beans -->
	<bean id="exitListener" class="de.mpg.biochem.model.ExitAfterJobExecution"/>
	
	<bean id="indexDecider" class="de.mpg.biochem.batch.IndexDecider"/>
	
	<!-- Interbase Processor -->
    <bean id="interProcessor" class="de.mpg.biochem.batch.InterBaseProcessor" scope="step">
    	<constructor-arg name="indexPath" value="file:#{jobParameters['mappingPath']}/index"/>
    	<constructor-arg name="filePath" value="file:#{jobParameters['mappingPath']}/index/notmapped.tab"/>
    	<property name="servicesToSkip" value="DIP,IntAct,MINT,MatrixDB,MPIDB,MolCon,I2D,InnateDB,BioGRID,BIND,I2D-IMEx,InnateDB-IMEx"/>
    </bean>
	
	<!-- ncbi Processor -->
    <bean id="ncbiProcessor" class="de.mpg.biochem.batch.NcbiMappingProcessor" scope="step"/>
	
	<!-- Uniprot Mapping gzip file reader -->
	<bean id="gzipItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:#{jobParameters['mappingPath']}idmapping_selected.tab.gz" />
        <property name="lineMapper">
            <bean class="de.mpg.biochem.batch.UniprotLineMapper" />
        </property>
        <property name="strict" value="false" />
        <property name="bufferedReaderFactory">
            <bean class="de.mpg.biochem.batch.GZipBufferedReaderFactory" />
        </property>
    </bean>
    
    <!-- NCBI Mapping gzip file reader -->
	<bean id="ncbiGzipItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:#{jobParameters['mappingPath']}gene2accession.gz" />
        <property name="strict" value="false" />
        <property name="lineMapper">
            <bean class="de.mpg.biochem.batch.UniprotLineMapper"/>
        </property>
        <property name="bufferedReaderFactory">
            <bean class="de.mpg.biochem.batch.GZipBufferedReaderFactory" />
        </property>
    </bean>
	
	<bean id="psimiReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['fileName']}" />
		<property name="strict" value="true"/>
		<property name="lineMapper">
        	<bean class="de.mpg.biochem.batch.PSIMITabLineMapper"></bean>
        </property>
	</bean>
	
	<!-- Writers -->
	<!-- Uniprot Mapping Writer -->
	<bean id="mappingIndexWriter" class="de.mpg.biochem.batch.UniprotMappingIndexWriter" scope="step">
		<constructor-arg name="path" value="#{jobParameters['mappingPath']}/index"/>
	</bean>
	
	<!-- ncbi Mapping Writer -->
	<bean id="ncbiMappingIndexWriter" class="de.mpg.biochem.batch.NcbiMappingIndexWriter" scope="step">
		<constructor-arg name="path" value="#{jobParameters['mappingPath']}/index"/>
	</bean>
	
	<bean id="BIWriter2" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="file:#{jobParameters['fileName']}.mapped" />
		<property name="lineAggregator">
            <bean class="de.mpg.biochem.batch.PSIMITabLineAgregator"></bean>
        </property>
	</bean>
	
	<!-- Tasklets -->
	<bean id="downloadMappingFiles" class="de.mpg.biochem.tasklet.DownloadMappingsTasklet" scope="step">
		<property name="uniprotUrl" value="#{jobParameters['uniprotUrl']}" />
		<property name="ncbiUrl" value="#{jobParameters['ncbiUrl']}" />
		<property name="path" value="#{jobParameters['mappingPath']}" />
	</bean>
    
    <!-- Job -->
	<batch:job id="mapJob" job-repository="jobRepository">
		<batch:step id="download" next="decision">
			<batch:tasklet ref="downloadMappingFiles"/>
		</batch:step>
		<batch:decision id="decision" decider="indexDecider">
			<batch:next on="CONTINUE" to="createUniprotIndexParent" />
			<batch:next on="SKIP" to="mapIds" />
	  	</batch:decision>
	  	<batch:step id="createUniprotIndexParent" next="createNcbiIndexParent">
			<batch:tasklet task-executor="taskExecutor" throttle-limit="50">
				<batch:chunk reader="gzipItemReader" writer="mappingIndexWriter" commit-interval="10000"></batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="createNcbiIndexParent" next="mapIds">
			<batch:tasklet task-executor="taskExecutor" throttle-limit="50">
				<batch:chunk reader="ncbiGzipItemReader" processor="ncbiProcessor" writer="ncbiMappingIndexWriter" commit-interval="10000"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	  	<batch:step id="mapIds">
			<batch:tasklet>
				<batch:chunk reader="psimiReader" processor="interProcessor" writer="BIWriter2" commit-interval="30000"/>
			</batch:tasklet>
	    </batch:step>
		<batch:listeners>
			<batch:listener ref="exitListener"/>
		</batch:listeners>
    </batch:job>

</beans>
